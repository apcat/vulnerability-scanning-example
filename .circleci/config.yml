version: 2.1

executors:
  default:
    working_directory: /project
    docker:
      - image: cimg/go:1.16
        user: root
        environment:
          TZ: "Asia/Tokyo"
  trivy:
    working_directory: /project
    docker:
      - image: aquasec/trivy
    shell: /bin/sh -leo pipefail
    environment:
      BASH_ENV: /etc/profile

orbs:
  go: circleci/go@1.7.0
  slack: circleci/slack@4.4.2

jobs:
  build:
    executor: default
    steps:
      - checkout
      - go/mod-download-cached
      - run:
          name: Build
          command: go build -o ./build/vulnerability-scanning-example .
      - persist_to_workspace:
          root: /project
          paths:
            - "*"

  vulnerability_scan:
    executor: trivy
    steps:
      - attach_workspace:
          at: /project
      - run:
          name: Install dependencies to use Slack Orb
          command: |
            apk --no-cache add curl jq
      - run:
          name: Trivy
          command: |
            trivy fs -f template -t "$(cat trivy/slack.tpl)" -s "HIGH,CRITICAL" --ignore-unfixed -o trivy_out.json --exit-code 1 ./build
      - run:
          name: Set $SLACK_TEMPLATE
          command: |
            echo "export SLACK_TEMPLATE='$(cat trivy_out.json | jq -c '.')'" >> $BASH_ENV
          when: on_fail
      - slack/notify:
          event: fail
          template: SLACK_TEMPLATE

workflows:
  version: 2
  build:
    jobs:
      - build:
          filters:
            branches:
              ignore: master
      - vulnerability_scan:
          requires:
            - build

  scheduled_vulnerability_scan:
    triggers:
      - schedule:
          cron: "0 1 * * 1,2,3,4,5" # 月-金 10:00 JST
          filters:
            branches:
              only: master
    jobs:
      - build
      - vulnerability_scan:
          requires:
            - build
